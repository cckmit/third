/*
 * $Id$
 * 
 * Copyright 2007-2008 RedFlagSoft.CN All Rights Reserved.
 * RedFlagSoft PROPRIETARY/CONFIDENTIAL.
 *
 * 未经深圳市红旗信息技术有限公司许可，任何人不得擅自（包括但不限于：
 * 以非法的方式复制、传播、展示、镜像、上载、下载、引用）使用。
 */
package cn.redflagsoft.base.bean;

import java.io.Serializable;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.util.Assert;

/**
 * @author Alex Lin
 *
 */
public class RiskEntry implements Serializable {
	private static final Log log = LogFactory.getLog(RiskEntry.class);
	/**
	 * 
	 */
	private static final long serialVersionUID = -657530081167639158L;
	private Long riskID;
	private String objectAttr;
	private byte valueSource = 0;
	
	public RiskEntry() {
	}

	public RiskEntry(Long riskID, String objectAttr, byte valueSource) {
		this.riskID = riskID;
		this.objectAttr = objectAttr;
		this.valueSource = valueSource;
	}

	public Long getRiskID() {
		return riskID;
	}
	
	public void setRiskID(Long riskID) {
		this.riskID = riskID;
	}
	
	public String getObjectAttr() {
		return objectAttr;
	}
	
	public void setObjectAttr(String objectAttr) {
		this.objectAttr = objectAttr;
	}
	
	public String toString(){
		return riskID + "," + objectAttr + "," + valueSource;
	}
	
	public byte getValueSource() {
		return valueSource;
	}

	public void setValueSource(byte valueSource) {
		this.valueSource = valueSource;
	}

	public static RiskEntry valueOf(String string){
		Assert.notNull(string);
		try{
			String[] arr = string.split(",");
			return new RiskEntry(Long.valueOf(arr[0]), arr[1], Byte.parseByte(arr[2]));
		}catch(Exception e){
			log.error(e);
			return null;
		}
	}
}
