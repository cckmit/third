/*
 * $Id$
 * 
 * Copyright 2007-2009 RedFlagSoft.CN All Rights Reserved.
 * RedFlagSoft PROPRIETARY/CONFIDENTIAL.
 *
 * 未经深圳市红旗信息技术有限公司许可，任何人不得擅自（包括但不限于：
 * 以非法的方式复制、传播、展示、镜像、上载、下载、引用）使用。
 */
package cn.redflagsoft.base.support;

import java.util.List;
import java.util.Map;

import org.opoo.apps.QueryParameter;
import org.opoo.apps.QueryParameters;
import org.opoo.ndao.criterion.Order;

import cn.redflagsoft.base.web.struts2.QueryActionV3;

/**
 * 参数封装类。
 * 
 * <p>
 * 被封装的对象的 getParameters()方法可能是动态的（例如 {@link QueryActionV3}，多次调用类似方法
 * 会造成不必要的开销，所以这个封装类将这个属性先缓存，解决这个问题。
 * 
 * @author Alex Lin(lcql@msn.com)
 */
public class QueryParametersWrapper implements QueryParameters {
	private static final long serialVersionUID = 3474865532425826919L;
	private final String dir;
	private final String sort;
	private final Order order;
	private final int maxResults;
	private final int start;
	private final List<QueryParameter> parameters;// = Lists.newArrayList();
	private final Map<String, ?> rawParameters;// = Maps.newHashMap();
	public QueryParametersWrapper(QueryParameters params){
		this.dir = params.getDir();
		this.maxResults = params.getMaxResults();
		this.order = params.getOrder();
		this.sort = params.getSort();
		this.start = params.getStart();
		this.parameters = params.getParameters();
		this.rawParameters = params.getRawParameters();
	}
	/**
	 * @return the dir
	 */
	public String getDir() {
		return dir;
	}
	/**
	 * @return the sort
	 */
	public String getSort() {
		return sort;
	}
	/**
	 * @return the order
	 */
	public Order getOrder() {
		return order;
	}
	/**
	 * @return the maxResults
	 */
	public int getMaxResults() {
		return maxResults;
	}
	/**
	 * @return the start
	 */
	public int getStart() {
		return start;
	}
	/**
	 * @return the parameters
	 */
	public List<QueryParameter> getParameters() {
		return parameters;
	}
	/**
	 * @return the rawParameters
	 */
	public Map<String, ?> getRawParameters() {
		return rawParameters;
	}
}
