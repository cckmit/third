/*
 * $Id$
 * 
 * Copyright 2007-2008 RedFlagSoft.CN All Rights Reserved.
 * RedFlagSoft PROPRIETARY/CONFIDENTIAL.
 *
 * 未经深圳市红旗信息技术有限公司许可，任何人不得擅自（包括但不限于：
 * 以非法的方式复制、传播、展示、镜像、上载、下载、引用）使用。
 */
package cn.redflagsoft.base.scheme.schemes.acl;

import java.util.ArrayList;
import java.util.List;

import org.opoo.apps.security.User;
import org.opoo.apps.security.UserManager;
import org.springframework.util.Assert;

import cn.redflagsoft.base.scheme.AbstractScheme;
import cn.redflagsoft.base.security.Ace;
import cn.redflagsoft.base.security.AclManager;
import cn.redflagsoft.base.security.PermissionType;
import cn.redflagsoft.base.security.PermissionsManager;

public class UserAclScheme extends AbstractScheme{
	private AclManager aclManager;
	private UserManager userManager;
	private PermissionsManager permissionsManager;
	
	private List<AcePerm> perms;
	private String username;
	
	public AclManager getAclManager() {
		return aclManager;
	}

	public void setAclManager(AclManager aclManager) {
		this.aclManager = aclManager;
	}

	public UserManager getUserManager() {
		return userManager;
	}

	public void setUserManager(UserManager userManager) {
		this.userManager = userManager;
	}

	public PermissionsManager getPermissionsManager() {
		return permissionsManager;
	}

	public void setPermissionsManager(PermissionsManager permissionsManager) {
		this.permissionsManager = permissionsManager;
	}

	public List<AcePerm> getPerms() {
		return perms;
	}

	public void setPerms(List<AcePerm> perms) {
		this.perms = perms;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public Object doSaveAcl(){
		User user = getUser();
		if(perms == null){
			perms = new ArrayList<AcePerm>();
		}
		//clear all user's permissions
		permissionsManager.removeAllUserPermissions(user.getUserId(), PermissionType.ADDITIVE);
		
		//add new user's permissions
		int n = 0;
		for (AcePerm p : perms) {
			if(p.getPerms() > 0){
				permissionsManager.addUserPermission(user, p.getAceId(), PermissionType.ADDITIVE, p.getPerms());
				n++;
			}
		}
		return "为用户‘" + username + "’设置了 " + n + " 个权限。";
	}
	
	public List<Ace> viewFindAcl(){
		return aclManager.getUserAcl(getUser(), PermissionType.ADDITIVE);
	}
	
	private User getUser(){
		Assert.notNull(username, "必须指定用户");
		return (User) userManager.loadUserByUsername(username);
	}
}
