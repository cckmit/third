<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 mapper为映射的根节点，namespace指定Dao接口的完整类名
mybatis会依据这个接口动态创建一个实现类去实现这个接口，
而这个实现类是一个Mapper对象-->
<mapper namespace="com.beitie.mapper.UserMapper">

    <resultMap id="findUsersInfo" type="user">
        <id property="uid" column="uid"></id>
        <result property="uname" column="uname"></result>
        <result property="uaddress" column="uaddress"></result>
        <association property="people" column="uid"  select="findPeopleInfo"></association>
        <collection property="orders"  column="uid"  select="findOrdersByUserId">
        </collection>
    </resultMap>
    <resultMap id="findUsersInfo2" type="user">
        <id property="uid" column="uid"></id>
        <result property="uname" column="uname"></result>
        <result property="uaddress" column="uaddress"></result>
        <association property="people" javaType="people">
            <result property="realName" column="REAL_NAME"></result>
            <result property="IDNumber" column="ID_NUMBER"></result>
        </association>
        <collection property="orders"  ofType="orders"  >
            <result property="sn" column="sn"></result>
        </collection>
    </resultMap>

    <select id="findPeopleInfo" resultType="people">
        select  * from people p where p.uid=#{uid};
    </select>
    <resultMap id="peopleInfo" type="people">
        <id property="id" column="id"></id>
        <result property="realName" column="REAL_NAME"></result>
        <result property="IDNumber" column="ID_NUMBER"></result>
        <result property="uid" column="uid"></result>
    </resultMap>

    <sql id="queryCondition">
        <where>
            <if test=""></if>
        </where>
    </sql>

    <select id="findOrdersByUserId" resultType="orders">
        select * from orders where user_id=#{uid};
    </select>
    <!-- 根据uid查询一个用户信息 -->
    <select id="selectUserById" parameterType="Integer"
            resultType="user">
        select * from users where uid = #{uid} ;
    </select>
    <!-- 查询所有用户信息 -->
    <select id="selectAllUser"  resultMap="findUsersInfo2">
        select * from users u ,orders o,people p where u.uid = o.user_id and p.uid = u.uid;
    </select>
    <!-- 查询所有用户信息 -->
    <select id="selectAllUserAndOrders"  resultMap="findUsersInfoAndOrders">
        SELECT * FROM users u LEFT JOIN orders o ON u.`uid` = o.`user_id` ;
    </select>
    <resultMap id="findUsersInfoAndOrders" type="user">
        <id property="uid" column="uid"></id>
        <result property="uname" column="uname"></result>
        <result property="uaddress" column="uaddress"></result>
        <collection property="orders" ofType="orders">
            <id column="id" property="id"></id>
            <result column="sn" property="sn"></result>
        </collection>
    </resultMap>
    <!-- 添加一个用户，#{uname}为 com.mybatis.po.MyUser 的属性值 -->
    <insert id="addUser" parameterType="user" useGeneratedKeys="true" keyColumn="uid" keyProperty="uid">
        insert into users (uname,age,sex,address,grade,ubirth)
        values(#{uname},#{uage},#{sex},#{address},#{grade},#{ubirth});
    </insert>
<!--    &lt;!&ndash;修改一个用户 &ndash;&gt;-->
<!--    <update id="updateUser" parameterType="user" useGeneratedKeys="true">-->
<!--        update users set uname =-->
<!--        #{uname},uage = #{uage},usex = #{usex},uaddress = #{uaddress},-->
<!--        ugrade = #{ugrade}-->
<!--        where uid = #{uid}-->
<!--    </update>-->
    <!--修改一个用户 -->
    <update id="updateUser" parameterType="user" useGeneratedKeys="true">
        update users set photo = #{photo}
        where uid = #{uid}
    </update>
    <!-- 删除一个用户 -->
    <delete id="deleteUser" parameterType="Integer" >
        delete from users where uid = #{uid};
    </delete>

    <update id="updateUsersForDeleteUsers" parameterType="Integer">
        update users set delete_flag=1 where uid =#{uid}
    </update>

    <select id="findUsersByRelation" resultMap="usersRelation">
        select * from users;
    </select>
    <resultMap id="usersRelation" type="user">
        <id property="uid" column="uid"></id>
        <result property="uname" column="uname"></result>
        <result property="address" column="address"></result>
        <result property="photo" column="photo"></result>
        <collection property="orders" ofType="orders" column="uid" select="findOrdersById">
        </collection>
    </resultMap>
    <select id="findOrdersById" resultType="orders">
        SELECT o.id id ,o.sn sn FROM user_orders r,orders o WHERE r.`oid`=o.`id` AND r.`uid` =#{uid};
    </select>

    <select id="findUsersByRelation2" resultMap="usersRelation2">
        select * from users;
    </select>
    <resultMap id="usersRelation2" type="user">
        <id property="uid" column="uid"></id>
        <result property="uname" column="uname"></result>
        <result property="address" column="address"></result>
        <collection property="orders" ofType="orders" column="uid" resultMap="orderRelation">
        </collection>
    </resultMap>
    <resultMap id="orderRelation" type="orders">
        <id column="id" property="id"></id>
    </resultMap>
</mapper>
